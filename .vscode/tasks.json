{
  // See https://go.microsoft.com/fwlink/?LinkId=733558
  // for the documentation about the tasks.json format
  "version": "2.0.0",
  "tasks": [
    {
  "label": "Rebuild Dockerfile",
      "type": "shell",
      "command": "${workspaceFolder:NetAlertX}/.devcontainer/scripts/generate-dockerfile.sh",
      "presentation": {
        "echo": true, 
        "reveal": "always",
        "panel": "shared",
        "showReuseMessage": false
      },
      "problemMatcher": [],
      "group": {
        "kind": "build",
        "isDefault": false
      },
      "options": {
        "cwd": "${workspaceFolder:NetAlertX}"
      },
      "icon": {
        "id": "tools",
        "color": "terminal.ansiYellow"
      }
    },
    {
  "label": "Run Setup Script",
      "type": "shell",
      "command": "${workspaceFolder:NetAlertX}/.devcontainer/scripts/setup.sh",
      "presentation": {
        "echo": true,
        "reveal": "always",
        "panel": "shared",
        "showReuseMessage": false
      },
      "problemMatcher": [],
      "icon": {
        "id": "beaker",
        "color": "terminal.ansiBlue"
      }
    },
    {
  "label": "Start NetAlertX Services",
      "type": "shell",
      "command": "sh -c '${workspaceFolder:NetAlertX}/.devcontainer/scripts/setup.sh'",
      "presentation": {
        "echo": true,
        "reveal": "always",
        "panel": "shared",
        "showReuseMessage": false
      },
      "problemMatcher": [],
      "icon": {
        "id": "play",
        "color": "terminal.ansiGreen"
      }
    },
    {
      "label": "Restart GraphQL",
      "type": "shell",
      // Minimal: start backend under debugpy with absolute paths so cwd quirks don't matter.
      // 1. Kill existing python3
      // 2. Short delay
      // 3. Exec debugpy directly referencing /app/server/__main__.py
      // 4. Run detached (nohup + setsid) so task can exit cleanly without killing process.
      //    Use exec to avoid extra shell layer; append marker file for quick verification.
      "command": "sudo killall python3 2>/dev/null || true; sleep 0.3; mkdir -p /app/log; setsid nohup python3 -m debugpy --listen 0.0.0.0:5678 /app/server/__main__.py > /app/log/app_stdout.log 2> /app/log/app_stderr.log & echo $! > /app/log/app_backend.pid; echo 'NetAlertX backend restarted (PID '$(cat /app/log/app_backend.pid)')'; sleep 1",
      "presentation": {
        "echo": true,
        "reveal": "always",
        "panel": "shared",
        "showReuseMessage": false,
        "clear": false
      },
      "problemMatcher": [],
      "icon": {
        "id": "debug-restart",
        "color": "terminal.ansiYellow"
      }
    },
    {
      "label": "Restart Nginx and PHP-FPM",
      "type": "shell",
      "command": "killall php-fpm83 nginx 2>/dev/null || true; sleep 1; php-fpm83 && nginx",
      "presentation": {
        "echo": true,
        "reveal": "always",
        "panel": "shared",
        "showReuseMessage": false,
        "clear": false
      },
      "problemMatcher": [],
      "icon": {
        "id": "debug-restart",
        "color": "terminal.ansiYellow"
      }
    },
    {
  "label": "Stop NetAlertX Services",
      "type": "shell",
      "command": "pkill -f 'php-fpm83|nginx|crond|python3' || true",
      "presentation": {
        "echo": true,
        "reveal": "always",
        "panel": "shared",
        "showReuseMessage": false
      },
      "problemMatcher": [],
      "icon": {
        "id": "debug-stop",
        "color": "terminal.ansiRed"
      }
    }
  ]
}